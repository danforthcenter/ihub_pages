# Name of your workflow, visible in the GitHub Actions tab
name: Build Hugo Site and Create Tarball

# Controls when the workflow will run
on:
  # Trigger the workflow on pushes to the 'main' branch
  push:
    branches:
      - main
  # Allow manual triggering from the GitHub Actions tab
  workflow_dispatch:

# Define the jobs to run in this workflow
jobs:
  build_and_archive:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      # Step 2: Set up Go environment (needed for Hugo modules)
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      # Step 3: Set up Hugo environment
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true

      # Step 4: Clean and initialize Hugo modules (more robust approach)
      - name: Clean and initialize Hugo modules
        run: |
          # Remove any existing module files that might cause conflicts
          rm -f go.mod go.sum
          
          # Initialize Hugo modules with your repository
          hugo mod init github.com/${{ github.repository }}
          
          # Directly get the theme from master branch
          hugo mod get github.com/StefMa/hugo-fresh@master
          
          # Clean up and ensure dependencies are correct
          hugo mod tidy
          hugo mod verify

      # Step 5: Build the Hugo site
      - name: Build Hugo site
        run: |
          # Clean public directory
          rm -rf public
          
          # Build with verbose output for debugging
          hugo --minify --gc --verbose
          
          # Verify critical files exist
          echo "Checking for CSS files..."
          find public -name "*.css" | head -5
          echo "Checking for JS files..."
          find public -name "*.js" | head -5

      # Step 6: Create a tarball of the static assets
      - name: Create tarball of static assets
        run: |
          TARBALL_NAME="hugo-site-$(date +%Y%m%d-%H%M%S)-${{ github.sha }}.tar.gz"
          tar -czvf $TARBALL_NAME public/
          echo "Tarball created: $TARBALL_NAME"
          echo "TARBALL_NAME=$TARBALL_NAME" >> "$GITHUB_ENV"

      # Step 7: Upload the tarball as a workflow artifact
      - name: Upload static site tarball
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.TARBALL_NAME }}
          path: ${{ env.TARBALL_NAME }}
          retention-days: 7

  # Deploy to GitHub Pages
  deploy_to_gh_pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build_and_archive
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      # Clean and initialize Hugo modules (same as build job)
      - name: Clean and initialize Hugo modules
        run: |
          rm -f go.mod go.sum
          hugo mod init github.com/${{ github.repository }}
          hugo mod get github.com/StefMa/hugo-fresh@master
          hugo mod tidy
          hugo mod verify

      # Build specifically for GitHub Pages with correct baseURL
      - name: Build Hugo site for GitHub Pages
        run: |
          rm -rf public
          hugo --minify --gc --baseURL "${{ steps.pages.outputs.base_url }}"

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
